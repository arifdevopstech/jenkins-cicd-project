pipeline {
    agent any
    
    tools {
        jdk 'jdk17'
        maven 'maven3'
    }
    
    environment {
        SCANNER_HOME= tool 'sonar-scanner'
        DOCKER_IMAGE= "ari786/spring-boot-app:${BUILD_NUMBER}"
        GIT_REPO_NAME= "jenkins-cicd-project"
        GIT_USER_NAME= "arifdevopstech"
    }

    stages {
        stage('Git Checkout') {
            steps {
              git 'https://github.com/arifdevopstech/jenkins-cicd-project.git'
            }
        }
        stage('Maven Compile') {
            steps {
                sh 'cd spring-boot-app && mvn clean compile'
            }
        }
        stage('Sonarqube Analysis') {
            steps {
                withSonarQubeEnv('sonarqube') {
                  sh 'cd spring-boot-app'
                  sh '''$SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Springboot-app \
                  -Dsonar.projectKey=Springboot-app \
                  -Dsonar.java.binaries=. '''
                }
            }
        }
        stage('Maven Build') {
            steps {
                sh 'cd spring-boot-app && mvn clean package'
            }
        }
        stage('Docker Build') {
            steps {
              script {
                withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                  sh 'cd spring-boot-app && docker build -t $DOCKER_IMAGE .'
                  def dockerImage = docker.image("${DOCKER_IMAGE}")
                  dockerImage.push()
                }
              }
            }
        }
        stage('Update Deployment File') {
            steps {
                withCredentials([string(credentialsId: 'github_token', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                      git config user.email "arxxxxxxxxxxxxxh@hotmail.com"
                      git config user.name "Arif Sadiq"
                      BUILD_NUMBER=${BUILD_NUMBER}
                      sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml
                      git add spring-boot-app-manifests/deployment.yml
                      git commit -m "Updated the deployment image with version ${BUILD_NUMBER}"
                      git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
                      '''
                }
            }
        }
    }
}
